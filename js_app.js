// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let transactions = [];
let currentMonth = new Date().getMonth();
let currentUser = null;
let isOnline = navigator.onLine;

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ (–≤–∞—à–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ)
const categories = {
    income: {
        initial: { name: '–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å', icon: 'üí∞' },
        salary: { name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', icon: 'üíº' },
        crypto: { name: '–ö—Ä–∏–ø—Ç–∞', icon: '‚Çø' },
        gift: { name: '–ü–æ–¥–∞—Ä–∏–ª–∏', icon: 'üéÅ' },
        additional: { name: '–î–æ–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è', icon: 'üí°' },
        exchange: { name: '–û–±–º–µ–Ω –≤–∞–ª—é—Ç', icon: 'üí±' }
    },
    expense: {
        food: { name: '–ü—Ä–æ–¥—É–∫—Ç—ã', icon: 'üõí' },
        transport: { name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', icon: 'üöó' },
        utilities: { name: '–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏', icon: 'üè†' },
        rent: { name: '–ê—Ä–µ–Ω–¥–∞', icon: 'üèòÔ∏è' },
        restaurant: { name: '–ö–∞—Ñ–µ/–†–µ—Å—Ç–æ—Ä–∞–Ω—ã', icon: 'üçΩÔ∏è' },
        clothes: { name: '–û–¥–µ–∂–¥–∞', icon: 'üëï' },
        online: { name: '–ó–∞–∫–∞–∑—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ', icon: 'üì¶' },
        pharmacy: { name: '–ê–ø—Ç–µ–∫–∞', icon: 'üíä' },
        exchange: { name: '–û–±–º–µ–Ω –≤–∞–ª—é—Ç', icon: 'üí±' },
        other: { name: '–ü—Ä–æ—á–µ–µ', icon: 'üí∏' }
    }
};

// –í–∞–ª—é—Ç—ã (–≤–∞—à–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ)
const currencies = {
    MDL: { symbol: 'MDL', rate: 1 },
    UAH: { symbol: 'UAH', rate: 0.5 },
    USD: { symbol: '$', rate: 18 },
    EUR: { symbol: '‚Ç¨', rate: 20 },
    USDT: { symbol: 'USDT', rate: 18 }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initializeApp() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase
    const firebaseInitialized = await initializeFirebase();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    setupEventListeners();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ Firebase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    if (!firebaseInitialized) {
        loadLocalData();
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
    initializeUI();
    
    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
    document.getElementById('typeSelect').addEventListener('change', updateCategoryOptions);
    document.getElementById('monthSelect').addEventListener('change', function() {
        currentMonth = parseInt(this.value);
        updateDisplay();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç
    const fromAmountInput = document.getElementById('fromAmountInput');
    const toAmountInput = document.getElementById('toAmountInput');
    const fromCurrencySelect = document.getElementById('fromCurrencySelect');
    const toCurrencySelect = document.getElementById('toCurrencySelect');
    
    if (fromAmountInput) fromAmountInput.addEventListener('input', calculateExchangeRate);
    if (toAmountInput) toAmountInput.addEventListener('input', calculateExchangeRate);
    if (fromCurrencySelect) fromCurrencySelect.addEventListener('change', calculateExchangeRate);
    if (toCurrencySelect) toCurrencySelect.addEventListener('change', calculateExchangeRate);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
    window.addEventListener('online', () => {
        isOnline = true;
        updateSyncIndicator('online');
        if (currentUser) {
            syncDataAfterReconnect();
        }
    });
    
    window.addEventListener('offline', () => {
        isOnline = false;
        updateSyncIndicator('offline');
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(event) {
        const modal = document.getElementById('transaction-modal');
        if (event.target === modal) {
            closeModal();
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function initializeUI() {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('dateInput').value = today;
    
    const exchangeDateInput = document.getElementById('exchangeDateInput');
    if (exchangeDateInput) {
        exchangeDateInput.value = today;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    document.getElementById('monthSelect').value = currentMonth;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    updateCategoryOptions();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateDisplay();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    updateSyncIndicator('offline');
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
function showPage(pageId) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.page').forEach(page => page.classList.remove('active'));
    document.querySelectorAll('.nav-item').forEach(item => item.classList.remove('active'));
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω—É–∂–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.getElementById(pageId).classList.add('active');
    event.target.closest('.nav-item').classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const titles = {
        dashboard: '–î–∞—à–±–æ—Ä–¥',
        transactions: '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
        exchange: '–û–±–º–µ–Ω –≤–∞–ª—é—Ç',
        categories: '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏',
        analytics: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞'
    };
    document.getElementById('page-title').textContent = titles[pageId];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (pageId === 'categories') {
        updateCategoriesPage();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø—Ü–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
function updateCategoryOptions() {
    const type = document.getElementById('typeSelect').value;
    const categorySelect = document.getElementById('categorySelect');
    categorySelect.innerHTML = '';
    
    const categoryList = categories[type];
    for (let key in categoryList) {
        const option = document.createElement('option');
        option.value = key;
        option.textContent = `${categoryList[key].icon} ${categoryList[key].name}`;
        categorySelect.appendChild(option);
    }
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function openAddTransactionModal(type = 'expense') {
    document.getElementById('typeSelect').value = type;
    updateCategoryOptions();
    document.getElementById('transaction-modal').classList.add('active');
}

function closeModal() {
    document.getElementById('transaction-modal').classList.remove('active');
    document.getElementById('transaction-form').reset();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('dateInput').value = today;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
function addTransaction(event) {
    event.preventDefault();
    
    const date = document.getElementById('dateInput').value;
    const type = document.getElementById('typeSelect').value;
    const category = document.getElementById('categorySelect').value;
    const amount = parseFloat(document.getElementById('amountInput').value);
    const currency = document.getElementById('currencySelect').value;
    const description = document.getElementById('descriptionInput').value;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!date || !amount || amount <= 0) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const transaction = {
        id: Date.now(),
        date: date,
        type: type,
        category: category,
        amount: amount,
        currency: currency,
        description: description,
        month: new Date(date).getMonth(),
        timestamp: new Date().toISOString()
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    transactions.push(transaction);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    updateDisplay();
    saveData();
    closeModal();
    
    console.log('–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:', transaction);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Å—è—Ü–∞
function onMonthChange() {
    currentMonth = parseInt(document.getElementById('monthSelect').value);
    updateDisplay();
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
function deleteTransaction(id) {
    const confirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?');
    if (!confirmed) return;
    
    transactions = transactions.filter(t => t.id !== id);
    updateDisplay();
    saveData();
    
    console.log('–£–¥–∞–ª–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å ID:', id);
}

// –†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞ –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç
function calculateExchangeRate() {
    const fromAmount = parseFloat(document.getElementById('fromAmountInput').value) || 0;
    const toAmount = parseFloat(document.getElementById('toAmountInput').value) || 0;
    const fromCurrency = document.getElementById('fromCurrencySelect').value;
    const toCurrency = document.getElementById('toCurrencySelect').value;
    
    if (fromAmount > 0 && toAmount > 0 && fromCurrency !== toCurrency) {
        const rate = (toAmount / fromAmount).toFixed(4);
        document.getElementById('rateDisplay').textContent = `–ö—É—Ä—Å: 1 ${fromCurrency} = ${rate} ${toCurrency}`;
    } else {
        document.getElementById('rateDisplay').textContent = '–ö—É—Ä—Å: -';
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç
function addExchange() {
    const date = document.getElementById('exchangeDateInput').value;
    const fromAmount = parseFloat(document.getElementById('fromAmountInput').value);
    const toAmount = parseFloat(document.getElementById('toAmountInput').value);
    const fromCurrency = document.getElementById('fromCurrencySelect').value;
    const toCurrency = document.getElementById('toCurrencySelect').value;
    const fee = parseFloat(document.getElementById('feeInput').value) || 0;
    const feeCurrency = document.getElementById('feeCurrencySelect').value;
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!date || !fromAmount || !toAmount || fromAmount <= 0 || toAmount <= 0) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
        return;
    }
    
    if (fromCurrency === toCurrency) {
        alert('–í–∞–ª—é—Ç—ã –æ–±–º–µ–Ω–∞ –¥–æ–ª–∂–Ω—ã –æ—Ç–ª–∏—á–∞—Ç—å—Å—è!');
        return;
    }
    
    const rate = (toAmount / fromAmount).toFixed(4);
    const exchangeDescription = `–û–±–º–µ–Ω ${fromCurrency}‚Üí${toCurrency} –ø–æ –∫—É—Ä—Å—É ${rate}`;
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Ä–∞—Å—Ö–æ–¥–∞ (–æ—Ç–¥–∞–µ–º –≤–∞–ª—é—Ç—É)
    const expenseTransaction = {
        id: Date.now(),
        date: date,
        type: 'expense',
        category: 'exchange',
        amount: fromAmount,
        currency: fromCurrency,
        description: exchangeDescription,
        month: new Date(date).getMonth(),
        timestamp: new Date().toISOString()
    };
    
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–æ—Ö–æ–¥–∞ (–ø–æ–ª—É—á–∞–µ–º –≤–∞–ª—é—Ç—É)
    const incomeTransaction = {
        id: Date.now() + 1,
        date: date,
        type: 'income',
        category: 'exchange',
        amount: toAmount,
        currency: toCurrency,
        description: exchangeDescription,
        month: new Date(date).getMonth(),
        timestamp: new Date().toISOString()
    };
    
    transactions.push(expenseTransaction);
    transactions.push(incomeTransaction);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–º–∏—Å—Å–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –∫–∞–∫ —Ä–∞—Å—Ö–æ–¥
    if (fee > 0) {
        const feeTransaction = {
            id: Date.now() + 2,
            date: date,
            type: 'expense',
            category: 'exchange',
            amount: fee,
            currency: feeCurrency,
            description: `–ö–æ–º–∏—Å—Å–∏—è –∑–∞ –æ–±–º–µ–Ω ${fromCurrency}‚Üí${toCurrency}`,
            month: new Date(date).getMonth(),
            timestamp: new Date().toISOString()
        };
        transactions.push(feeTransaction);
    }
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –æ–±–º–µ–Ω–∞
    clearExchangeForm();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    updateDisplay();
    saveData();
    
    const feeText = fee > 0 ? ` (–∫–æ–º–∏—Å—Å–∏—è: ${fee} ${feeCurrency})` : '';
    alert(`–û–±–º–µ–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω: ${fromAmount} ${fromCurrency} ‚Üí ${toAmount} ${toCurrency}${feeText}`);
    
    console.log('–î–æ–±–∞–≤–ª–µ–Ω –æ–±–º–µ–Ω –≤–∞–ª—é—Ç:', { expenseTransaction, incomeTransaction });
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç
function clearExchangeForm() {
    document.getElementById('fromAmountInput').value = '';
    document.getElementById('toAmountInput').value = '';
    document.getElementById('feeInput').value = '0';
    document.getElementById('rateDisplay').textContent = '–ö—É—Ä—Å: -';
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
function filterTransactions() {
    const filterValue = document.getElementById('typeFilter').value;
    let filteredTransactions = transactions;
    
    if (filterValue !== 'all') {
        filteredTransactions = transactions.filter(t => t.type === filterValue);
    }
    
    filteredTransactions.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));
    displayTransactionsTable(filteredTransactions);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ Firebase)
async function saveData() {
    // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    localStorage.setItem('financeTransactions', JSON.stringify(transactions));
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firebase –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    if (typeof isFirebaseConfigured !== 'undefined' && isFirebaseConfigured && currentUser && isOnline) {
        await saveDataToFirebase();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function loadLocalData() {
    const savedData = localStorage.getItem('financeTransactions');
    if (savedData) {
        try {
            transactions = JSON.parse(savedData);
            updateDisplay();
            console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            transactions = [];
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ Excel
function exportToExcel() {
    const monthNames = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å', 
                       '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'];
    
    const monthTransactions = transactions.filter(t => t.month === currentMonth);
    
    if (monthTransactions.length === 0) {
        alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞!');
        return;
    }
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    const data = monthTransactions.map(t => ({
        '–î–∞—Ç–∞': new Date(t.date).toLocaleDateString('ru-RU'),
        '–¢–∏–ø': t.type === 'income' ? '–î–æ—Ö–æ–¥' : '–†–∞—Å—Ö–æ–¥',
        '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': categories[t.type][t.category].name,
        '–û–ø–∏—Å–∞–Ω–∏–µ': t.description,
        '–°—É–º–º–∞': t.amount,
        '–í–∞–ª—é—Ç–∞': t.currency
    }));
    
    // –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
    const ws = XLSX.utils.json_to_sheet(data);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, monthNames[currentMonth]);
    
    // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    const fileName = `–§–∏–Ω–∞–Ω—Å—ã_${monthNames[currentMonth]}_2025.xlsx`;
    XLSX.writeFile(wb, fileName);
    
    console.log('–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π–ª:', fileName);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initializeApp);